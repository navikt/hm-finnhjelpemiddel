name: Manually deploy to NAIS (ENV)

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Deploy to environment
        options:
          - DEV
          - PROD

env:
  docker_image: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build-dev:
    name: Build and push Dev Docker container
    if: github.event.inputs.environment == 'DEV'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'write'
    env:
      BUILD_ENV: dev
      IMAGE_PROXY_URL: https://finnhjelpemiddel.intern.dev.nav.no/imageproxy
      CDN_URL: https://finnhjelpemiddel.intern.dev.nav.no/imageproxy/file/
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.docker_image }}
          build-args: |
            BUILD_ENV=${{ env.BUILD_ENV }}
            IMAGE_PROXY_URL=${{ env.IMAGE_PROXY_URL }}
            CDN_URL=${{ env.CDN_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"

  build-prod:
    name: Build and push Prod Docker container
    if: github.event.inputs.environment == 'PROD'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    env:
      BUILD_ENV: prod
      IMAGE_PROXY_URL: https://finnhjelpemiddel.nav.no/imageproxy
      CDN_URL: https://finnhjelpemiddel.nav.no/imageproxy/file/
      ASSET_PREFIX: https://cdn.nav.no/teamdigihot/hm-oversikt-frontend/prod
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install npm dependencies
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        run: npm install
      - name: Build application
        run: npm run build
      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v2@master
        with:
          cdn-team-name: teamdigihot
          source: ./.next/static
          destination: '/hm-oversikt-frontend/prod/_next'
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.docker_image }}
          build-args: |
            BUILD_ENV=${{ env.BUILD_ENV }}
            IMAGE_PROXY_URL=${{ env.IMAGE_PROXY_URL }}
            ASSET_PREFIX=${{ env.ASSET_PREFIX }}
            CDN_URL=${{ env.CDN_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"

  deploy-to-dev:
    name: Deploy to NAIS (DEV)
    needs: build-dev
    if: github.event.inputs.environment == 'DEV'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: image=${{ env.docker_image }}

  deploy-to-prod:
    name: Deploy to NAIS (PROD)
    needs: build-prod
    if: github.event.inputs.environment == 'PROD'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod.yaml
          VAR: image=${{ env.docker_image }}
