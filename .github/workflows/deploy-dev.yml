name: Bygg, deploy til dev-gcp og lag release
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:
      - dockerBuildPush

jobs:
  build:
    name: Bygg
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    timeout-minutes: 10
    outputs:
      docker_image: ${{ steps.docker-build-push.outputs.image }}
      version_tag: ${{ steps.version-tag.outputs.VERSION_TAG}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bygg og push Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdigihot
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ env.VERSION_TAG }}
          build_args: | # optional, default empty
            BUILD_ENV=${{ env.BUILD_ENV }}
             IMAGE_PROXY_URL=${{ env.IMAGE_PROXY_URL }}
             CDN_URL=${{ env.CDN_URL }}
             FARO_URL=${{ env.FARO_URL }}
          build_secrets: |
            NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Definer release tag
        id: version-tag
        run: echo "VERSION_TAG=${{env.VERSION_TAG}}" >> "$GITHUB_OUTPUT"

  deploy-dev:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 15
    env:
      VERSION_TAG: ${{ needs.build.outputs.version_tag }}

    steps:
      - name: Sjekk ut koden
        uses: actions/checkout@v4

      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          IMAGE: ${{ needs.build.outputs.docker_image }}

      - name: Etter deploy
        if: github.ref == 'refs/heads/main'
        uses: navikt/digihot-deploy/actions/post-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lag release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
